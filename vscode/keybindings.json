[
    {
        "key": "alt+/",
        "command": "-gitlens.gitCommands",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
    },
    {
        "key": "alt+b",
        "command": "-gitlens.toggleFileBlame",
        "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
    },
    {
        "key": "alt+b",
        "command": "gitlens.toggleLineBlame"
    },
    {
        "key": "alt+cmd+b",
        "command": "-workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "alt+cmd+p",
        "command": "-projectManager.listProjects"
    },
    {
        "key": "alt+g b",
        "command": "git.branchFrom"
    },
    {
        "key": "alt+g c",
        "command": "git.commit"
    },
    {
        "key": "alt+g f",
        "command": "git.fetchAll"
    },
    {
        "key": "alt+g f1",
        "command": "gitlens.gitCommands",
        "when": "!gitlens:disabled"
    },
    {
        "key": "alt+g i",
        "command": "git.ignore"
    },
    {
        "key": "alt+g m",
        "command": "git.merge"
    },
    {
        "key": "alt+g o",
        "command": "git.publish"
    },
    {
        "key": "alt+g p",
        "command": "git.pull"
    },
    {
        "key": "alt+g r",
        "command": "git.rebase"
    },
    {
        "key": "alt+g s",
        "command": "git.checkout"
    },
    {
        "key": "alt+g shift+c",
        "command": "git.clone"
    },
    {
        "key": "alt+g shift+p",
        "command": "git.push"
    },
    {
        "key": "alt+g u",
        "command": "git.undoCommit"
    },
    {
        "key": "alt+i backspace",
        "command": "github.copilot.toggleCopilot"
    },
    {
        "key": "alt+i d",
        "command": "github.copilot.interactiveEditor.generateDocs"
    },
    {
        "key": "alt+i e",
        "command": "github.copilot.interactiveEditor.explain"
    },
    {
        "key": "alt+i f",
        "command": "github.copilot.interactiveEditor.fix"
    },
    {
        "key": "alt+i i",
        "command": "workbench.panel.chat.view.copilot.focus"
    },
    {
        "key": "alt+i o",
        "command": "workbench.action.openChat"
    },
    {
        "key": "alt+i oem_5",
        "command": "github.copilot.generate",
        "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
    },
    {
        "key": "alt+i q",
        "command": "workbench.action.openQuickChat"
    },
    {
        "key": "alt+i shift+i",
        "command": "workbench.action.chat.startVoiceChat",
        "when": "!voiceChatInProgress"
    },
    {
        "key": "alt+i shift+q",
        "command": "workbench.action.chat.quickVoiceChat"
    },
    {
        "key": "alt+i space",
        "command": "workbench.action.quickchat.launchInlineChat"
    },
    {
        "key": "alt+i t",
        "command": "github.copilot.interactiveEditor.generateTests"
    },
    {
        "key": "alt+i v",
        "command": "workbench.action.chat.inlineVoiceChat"
    },
    {
        "key": "alt+p o",
        "command": "projectManager.listProjects"
    },
    {
        "key": "alt+p p",
        "command": "workbench.view.extension.project-manager"
    },
    {
        "key": "alt+p shift+o",
        "command": "projectManager.listProjectsNewWindow"
    },
    {
        "key": "alt+t b",
        "command": "workbench.action.tasks.build",
        "when": "taskCommandsRegistered"
    },
    {
        "key": "alt+t e",
        "command": "workbench.action.tasks.configureTaskRunner"
    },
    {
        "key": "alt+t l",
        "command": "workbench.action.tasks.showLog"
    },
    {
        "key": "alt+t q",
        "command": "workbench.action.tasks.terminate"
    },
    {
        "key": "alt+t r",
        "command": "workbench.action.tasks.runTask"
    },
    {
        "key": "alt+t shift+b",
        "command": "workbench.action.tasks.configureDefaultBuildTask"
    },
    {
        "key": "alt+t shift+r",
        "command": "workbench.action.tasks.reRunTask"
    },
    {
        "key": "alt+t shift+t",
        "command": "workbench.action.tasks.configureDefaultTestTask"
    },
    {
        "key": "alt+t t",
        "command": "workbench.action.tasks.test"
    },
    {
        "key": "alt+t u",
        "command": "workbench.action.tasks.openUserTasks"
    },
    {
        "key": "cmd+k v",
        "command": "-markdown.showPreviewToSide",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "cmd+r",
        "command": "workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "ctrl+c",
        "command": "extension.vim_escape",
        "when": "editorHoverFocused"
    },
    {
        "key": "ctrl+c",
        "command": "workbench.action.chat.stopListeningAndSubmit",
        "when": "voiceChatInProgress"
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.pageDownHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "ctrl+down",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+enter",
        "command": "-github.copilot.generate",
        "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
    },
    {
        "key": "ctrl+i",
        "command": "-github.copilot.terminal.suggestCommand",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+n",
        "command": "-cursorDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+n",
        "command": "-extension.vim_ctrl+n",
        "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+n",
        "command": "explorer.newFile",
        "when": "explorerViewletFocus"
    },
    {
        "key": "ctrl+n",
        "command": "history.showNext",
        "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+n",
        "command": "selectNextCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+n",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+n",
        "command": "showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.terminal.selectNextSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "ctrl+p",
        "command": "-cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+p",
        "command": "-extension.vim_ctrl+p",
        "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+p",
        "command": "selectPrevCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+p",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "ctrl+shift+n",
        "command": "explorer.newFolder",
        "when": "explorerViewletFocus"
    },
    {
        "key": "ctrl+space",
        "command": "-extension.vim_ctrl+space",
        "when": "editorTextFocus && vim.active && vim.use<C-space> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+u",
        "command": "editor.action.pageUpHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "ctrl+up",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "down",
        "command": "-history.showNext",
        "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
    },
    {
        "key": "down",
        "command": "-selectNextCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "down",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "down",
        "command": "-showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "down",
        "command": "-workbench.action.terminal.selectNextSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "j",
        "command": "editor.action.scrollDownHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "k",
        "command": "editor.action.scrollUpHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "shift+alt+v",
        "command": "markdown.showPreviewToSide",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "shift+cmd+b",
        "command": "-workbench.action.tasks.build",
        "when": "taskCommandsRegistered"
    },
    {
        "key": "shift+cmd+b",
        "command": "workbench.view.extension.test"
    },
    {
        "key": "shift+cmd+g",
        "command": "-editor.action.previousMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "shift+cmd+g",
        "command": "-workbench.action.terminal.findPrevious",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "shift+cmd+g",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "shift+cmd+g",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "shift+cmd+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+k",
        "command": "workbench.profiles.actions.switchProfile"
    },
    {
        "key": "shift+cmd+z",
        "command": "-redo"
    },
    {
        "key": "shift+cmd+z",
        "command": "workbench.view.remote"
    },
    {
        "key": "shift+enter",
        "command": "explorer.openAndPassFocus",
        "when": "explorerViewletFocus"
    },
    {
        "key": "shift+escape",
        "command": "-hideSuggestWidget",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "shift+space",
        "command": "hideSuggestWidget",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "up",
        "command": "-selectPrevCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "up",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "shift+cmd+j",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "shift+cmd+k",
        "command": "workbench.action.quickOpenTerm",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
    }
]
